class CT_Shotgun : MWeapon
{
	int barrel;
	Default
	{
		//$Category Weapons
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 9;
		Weapon.AmmoType "CT_Shell";
		Inventory.PickupMessage "Shotgun";
		Obituary "$OB_MPSHOTGUN";//Do this at some point
	}
	States
	{
	Ready:
		RPPR A 0 CT_SpectrumAnalyzer();
	Idle:
		RPPR A 0 CT_SetIdleFrame();
		RPPR "#" 1 CT_WeaponReady;
		Loop;
	Deselect:
		RPPR A 0 CT_SetIdleFrame();
		RPPR "#" 1 CT_Lower;
		Loop;
	Select:
		RPPR A 0 CT_SetIdleFrame();
		RPPR "#" 1 CT_Raise;
		Loop;
	Fire:
		RPPR A 0 CT_SetIdleFrame();
		RPPR "#" 3 CT_ResetOffset();
	Fire.Hold:
		RPPR A 0//Could be a function but it only gets used once
			{
				if(invoker.barrel == 0)
					{
						invoker.barrel++;
						Return ResolveState("Fire.Left");
					}
				else if(invoker.barrel == 1)
					{
						invoker.barrel++;
						Return ResolveState("Fire.Center");
					}
				else if(invoker.barrel == 2)
					{
						invoker.barrel++;
						Return ResolveState("Fire.Right");
					}
				else
					{
						invoker.barrel *= 0;
						Return ResolveState("Fire.Reload");
					}
			}
	Fire.Left:
		RPPR B 3
			{
				A_AlertMonsters();
        A_PlaySound("weapon-shotgun-fire", CHAN_WEAPON);
				A_FireProjectile("ShotgunShot", frandom(-6,-1), TRUE, -2, 0, FPF_AIMATANGLE);
				A_FireProjectile("ShotgunShot", 0, FALSE, -2, 0, FPF_AIMATANGLE);
				A_FireProjectile("ShotgunShot", frandom(6,1), FALSE, -2, 0, FPF_AIMATANGLE);
				A_OverlayOffset(1,0 - 2 + fRandom(0.5,-0.5),32 + 10 + fRandom(0.5,-0.5));
			}
		RPPR C 1 A_OverlayOffset(1,0 - 2 + fRandom(0.5,-0.5),32 + 8 + fRandom(0.5,-0.5));
		RPPR C 4 A_OverlayOffset(1,0 - 1 + fRandom(0.5,-0.5),32 + 4 + fRandom(0.5,-0.5));
		RPPR C 4 CT_ResetOffset();
		RPPR C 1 A_ReFire("Fire.Hold");
		Goto Fire.Done;
	Fire.Center:
		RPPR D 3
			{
				A_AlertMonsters();
        A_PlaySound("weapon-shotgun-fire", CHAN_WEAPON);
				A_FireProjectile("ShotgunShot", frandom(-6,-1), TRUE, 0, 0, FPF_AIMATANGLE);
				A_FireProjectile("ShotgunShot", 0, FALSE, 0, 0, FPF_AIMATANGLE);
				A_FireProjectile("ShotgunShot", frandom(6,1), FALSE, 0, 0, FPF_AIMATANGLE);
				A_OverlayOffset(1,0 + fRandom(0.5,-0.5),32 + 10 + fRandom(0.5,-0.5));
			}
		RPPR E 1 A_OverlayOffset(1,0 + fRandom(0.5,-0.5),32 + 8 + fRandom(0.5,-0.5));
		RPPR E 4 A_OverlayOffset(1,0 + fRandom(0.5,-0.5),32 + 4 + fRandom(0.5,-0.5));
		RPPR E 4 CT_ResetOffset();
		RPPR E 1 A_ReFire("Fire.Hold");
		Goto Fire.Done;
	Fire.Right:
		RPPR F 3
			{
				A_AlertMonsters();
        A_PlaySound("weapon-shotgun-fire", CHAN_WEAPON);
				A_FireProjectile("ShotgunShot", frandom(-6,-1), TRUE, 2, 0, FPF_AIMATANGLE);
				A_FireProjectile("ShotgunShot", 0, FALSE, 2, 0, FPF_AIMATANGLE);
				A_FireProjectile("ShotgunShot", frandom(6,1), FALSE, 2, 0, FPF_AIMATANGLE);
				A_OverlayOffset(1,0 + 2 + fRandom(0.5,-0.5),32 + 10 + fRandom(0.5,-0.5));
			}
		RPPR G 1 A_OverlayOffset(1,0 + 2 + fRandom(0.5,-0.5),32 + 8 + fRandom(0.5,-0.5));
		RPPR G 4 A_OverlayOffset(1,0 + 1 + fRandom(0.5,-0.5),32 + 4 + fRandom(0.5,-0.5));
		RPPR G 4 CT_ResetOffset();
		RPPR G 1 A_ReFire("Fire.Hold");
		Goto Fire.Reload;
	Fire.Done:
		RPPR A 0 CT_SetIdleFrame();
		RPPR "#" 4 CT_ResetOffset();
		RPPR A 0 CT_ResetAngleOffsets();

		Goto Idle;
	Fire.Reload:
		RPPR G 1
			{
				CT_ResetOffset();
				invoker.barrel *= 0;
				A_PlaySound("weapon-shotgun-reload", CHAN_AUTO);//This should not override the firing noise
			}
		RPPR G 6 A_OverlayOffset(1,0,32 + 10, WOF_INTERPOLATE);
		RPPR E 3 A_OverlayOffset(1,0+Random(2,-2),32 + 8);
		RPPR E 3 A_OverlayOffset(1,0+Random(2,-2),32 + 16);
		RPPR C 6 A_OverlayOffset(1,0+Random(2,-2),32 + 10, WOF_INTERPOLATE);
		RPPR A 8 A_OverlayOffset(1,0,32, WOF_INTERPOLATE);
		RPPR A 0 CT_ResetAngleOffsets();
		Goto Idle;
	Spawn:
		RPPR Z -1;
		Stop;
	Ready.Spectrum3:
		EQL3 A 0 A_Jump(256,1,2,3,4);
		EQL3 EDCBA 6;
		EQL3 F 1 A_SetTics(random(6,12));
		Loop;
	Ready.Spectrum4:
		EQL4 A 0 A_Jump(256,1,2,3,4);
		EQL4 EDCBA 6;
		EQL4 F 1 A_SetTics(random(6,12));
		Loop;
	Ready.Spectrum5:
		EQL5 A 0 A_Jump(256,1,2,3,4);
		EQL5 EDCBA 6;
		EQL5 F 1 A_SetTics(random(6,12));
		Loop;
	Ready.Spectrum6:
		EQL6 A 0 A_Jump(256,1,2,3,4);
		EQL6 EDCBA 6;
		EQL6 F 1 A_SetTics(random(6,12));
		Loop;
	Ready.Spectrum7:
		EQL7 A 0 A_Jump(256,1,2,3,4);
		EQL7 EDCBA 6;
		EQL7 F 1 A_SetTics(random(6,12));
		Loop;
	Ready.Spectrum8:
		EQL8 A 0 A_Jump(256,1,2,3,4);
		EQL8 EDCBA 6;
		EQL8 F 1 A_SetTics(random(6,12));
		Loop;
	}
Action void CT_SetIdleFrame ()
	{
	if(invoker.barrel == 1)
		{
			CT_SetWeaponFrame (2);
		}
		else if(invoker.barrel == 2)
		{
			CT_SetWeaponFrame (4);
		}
		else if(invoker.barrel == 3)
		{
			CT_SetWeaponFrame (6);
		}
		else
		{
			CT_SetWeaponFrame (0);
		}
	}
Action void CT_SpectrumAnalyzer()
	{
		A_Overlay(3, "Ready.Spectrum3");
		A_Overlay(4, "Ready.Spectrum4");
		A_Overlay(5, "Ready.Spectrum5");
		A_Overlay(6, "Ready.Spectrum6");
		A_Overlay(7, "Ready.Spectrum7");
		A_Overlay(8, "Ready.Spectrum8");

		A_OverlayFlags(3, PSPF_ADDWEAPON, TRUE);
		A_OverlayFlags(4, PSPF_ADDWEAPON, TRUE);
		A_OverlayFlags(5, PSPF_ADDWEAPON, TRUE);
		A_OverlayFlags(6, PSPF_ADDWEAPON, TRUE);
		A_OverlayFlags(7, PSPF_ADDWEAPON, TRUE);
		A_OverlayFlags(8, PSPF_ADDWEAPON, TRUE);
	}
}

class ShotgunShot : Actor
{
Default
	{
		Radius 6;
		Height 8;
		Speed 20;
		DamageFunction (20);//never randomizing damage again!
		Projectile;
		+ROLLSPRITE	+ROLLCENTER	+BRIGHT	+BLOODSPLATTER
		DeathSound "imp/shotx";
	}
Override void PostBeginPlay()
	{
		A_ScaleVelocity(frandom(0.9,1.1));
		Super.PostBeginPLay();
	}
States
	{
	Spawn:
		RPRS A 2
			{
				A_SetRoll(roll + 45);
				A_SpawnItemEX("GunSmoke",0,0,0,0,0,0,0,0,128,0);
			}
		Loop;
	Death:
		RPRS A 0 A_SetRoll(0);
		RPRS BCBC 2;
		RPRS DEFGH 3;
		Stop;
	}
}
